// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealStateApp.Infraestructure.Persistence.Context;

#nullable disable

namespace RealStateApp.Infraestructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240326021126_IdentityMigration")]
    partial class IdentityMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Descripcion.ImgPropiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropieadId")
                        .HasColumnType("int");

                    b.Property<string>("UrlImg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PropieadId")
                        .IsUnique();

                    b.ToTable("ImgPropiedades");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Descripcion.TipoPropiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposPropiedad");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Descripcion.TipoVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposVenta");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Favorita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.HasIndex("PropiedadId")
                        .IsUnique();

                    b.ToTable("Favoritas");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Mejora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mejoras");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.MejorasAplicadas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MejoraId")
                        .HasColumnType("int");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MejoraId")
                        .IsUnique();

                    b.HasIndex("PropiedadId")
                        .IsUnique();

                    b.ToTable("MejorasAplicadas");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Propiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Identifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumAceados")
                        .HasColumnType("int");

                    b.Property<int>("NumHabitaciones")
                        .HasColumnType("int");

                    b.Property<double>("Pprecio")
                        .HasColumnType("float");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoPropiedadId")
                        .HasColumnType("int");

                    b.Property<int>("TipoVentaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoPropiedadId")
                        .IsUnique();

                    b.HasIndex("TipoVentaId")
                        .IsUnique();

                    b.ToTable("Propiedades");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Users.Administrador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Users.Agente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Agentes");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Users.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Descripcion.ImgPropiedad", b =>
                {
                    b.HasOne("RealStateApp.Core.Domain.Entities.Propiedad", "Propiedad")
                        .WithOne("ImgPropiedad")
                        .HasForeignKey("RealStateApp.Core.Domain.Entities.Descripcion.ImgPropiedad", "PropieadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Favorita", b =>
                {
                    b.HasOne("RealStateApp.Core.Domain.Entities.Users.Cliente", "Cliente")
                        .WithOne("Favorita")
                        .HasForeignKey("RealStateApp.Core.Domain.Entities.Favorita", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealStateApp.Core.Domain.Entities.Propiedad", "Propiedad")
                        .WithOne("Favorita")
                        .HasForeignKey("RealStateApp.Core.Domain.Entities.Favorita", "PropiedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.MejorasAplicadas", b =>
                {
                    b.HasOne("RealStateApp.Core.Domain.Entities.Mejora", "Mejora")
                        .WithOne("MejorasAplicadas")
                        .HasForeignKey("RealStateApp.Core.Domain.Entities.MejorasAplicadas", "MejoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealStateApp.Core.Domain.Entities.Propiedad", "Propiedad")
                        .WithOne("MejorasAplicadas")
                        .HasForeignKey("RealStateApp.Core.Domain.Entities.MejorasAplicadas", "PropiedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mejora");

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Propiedad", b =>
                {
                    b.HasOne("RealStateApp.Core.Domain.Entities.Descripcion.TipoPropiedad", "TipoPropiedad")
                        .WithOne("Propiedad")
                        .HasForeignKey("RealStateApp.Core.Domain.Entities.Propiedad", "TipoPropiedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealStateApp.Core.Domain.Entities.Descripcion.TipoVenta", "TipoVenta")
                        .WithOne("Propiedad")
                        .HasForeignKey("RealStateApp.Core.Domain.Entities.Propiedad", "TipoVentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoPropiedad");

                    b.Navigation("TipoVenta");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Descripcion.TipoPropiedad", b =>
                {
                    b.Navigation("Propiedad")
                        .IsRequired();
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Descripcion.TipoVenta", b =>
                {
                    b.Navigation("Propiedad")
                        .IsRequired();
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Mejora", b =>
                {
                    b.Navigation("MejorasAplicadas")
                        .IsRequired();
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Propiedad", b =>
                {
                    b.Navigation("Favorita")
                        .IsRequired();

                    b.Navigation("ImgPropiedad")
                        .IsRequired();

                    b.Navigation("MejorasAplicadas")
                        .IsRequired();
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Users.Cliente", b =>
                {
                    b.Navigation("Favorita")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
